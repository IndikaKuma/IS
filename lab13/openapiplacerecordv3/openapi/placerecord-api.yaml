openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Place Record
  license:
    name: MIT
servers:
  - url: http://localhost:5050/v1.0
paths:
  /placerecords/{name}:
    get:
      summary: Get a Place Record
      operationId: resources.place_record.PlaceRecord.get
      tags:
        - place records
      parameters:
        - name: name
          in: path
          description: Place Record identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: a Place Record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaceRecord"
        '404':
          description: Place record not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
#    post:
#      summary: Create a pet
#      tags:
#        - pets
#      requestBody:
#        description: Pet to add to the system
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/Pet"
#      responses:
#        '201':
#          description: Null response
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
#    put:
#      summary: Update a pet
#      tags:
#        - pets
#      requestBody:
#        description: Pet to add to the system
#        content:
#          application/json:
#            schema:
#              allOf:
#              - $ref: "#/components/schemas/Pet"
#              - type: object
#                required:
#                - id
#                properties:
#                  id:
#                    type: integer
#                    format: int64
#              example:
#                id: 1
#                name: chester
#                tag: sleepy
#      responses:
#        '201':
#          description: Null response
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
#
#
#  /pets/{petId}:
#    get:
#      summary: Info for a specific pet
#      tags:
#        - pets
#      parameters:
#        - name: petId
#          in: path
#          required: true
#          description: The id of the pet to retrieve
#          schema:
#            type: string
#      responses:
#        '200':
#          description: Expected response to a valid request
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Pets"
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
components:
  schemas:
    PlaceRecord:
      required:
        - name
      properties:
        rating:
          type: double
        name:
          type: string
        address:
          $ref: "#/components/schemas/Address"
    Address:
      properties:
        postcode:
          type: string
        street:
          type: string
        houseNo:
          type: integer
          format: int64
        city:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string